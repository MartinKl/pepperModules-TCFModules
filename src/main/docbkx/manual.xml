<?xml version='1.0'?>
<book xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0">
	<info>
		<title>TCFModules</title>
		<subtitle>User&apos;s Guide</subtitle>
		<authorgroup>
			<author>
				<personname><firstname>Martin</firstname>
					<surname>Klotz</surname></personname>
			</author>
		</authorgroup>
		<copyright>
			<year>01.06.2014</year>
			<holder>Martin Klotz, All rights reserved.</holder>
		</copyright>
		<releaseinfo>Version ${project.version}</releaseinfo>
	</info>
	<preface>
		<title>Foreword</title>
		<para>The intention of this document is first to give a guide to the 
		user of how to use the here mentioned Pepper modules and how to 
		utilize a mapping performed by them. Second this document shall give 
		a closer view in the details of such a mapping in a declarative way, 
		to give the user a chance to understand how specific data will be 
		mapped by the presented Pepper modules.</para>
	</preface>
	<chapter>
		<title>Overview</title>
		<para>This project contains the Pepper modules listed in 
		<xref linkend="table_overview"/>. A single module can be identified 
		via its coordinates (module-name, format-name, format-version) also 
		given in <xref linkend="table_overview"/>. You can use these 
		coordinates in a Pepper workflow description file to identify the 
		modules in a Pepper conversion process. A description of how to model 
		a workfloe description file can be found under 
		https://korpling.german.hu-berlin.de/saltnpepper/.</para>
		<table frame="all" xml:id="table_overview">
			<title>Pepper modules contained in this project</title>
			<tgroup align="left" cols="3" colsep="1" rowsep="1">
				<thead>
					<row>
						<entry>Name of Pepper module</entry>
						<entry>Type of Pepper module</entry>
						<entry>Format (if module is im- or exporter)</entry>
					</row>
				</thead>
				<tbody>
					<row>
						<entry>
						<xref endterm="sample_importer_name" linkend="sample_importer"/>
						</entry>
						<entry>importer</entry>
						<entry>version</entry>
					</row>
					<row>
						<entry>
						<xref endterm="sample_manipulator_name" linkend="sample_manipulator"/>
						</entry>
						<entry>manipulator</entry>
						<entry>--</entry>
					</row>
					<row>
						<entry>
						<xref endterm="sample_exporter_name" linkend="sample_exporter"/>
						</entry>
						<entry>exporter</entry>
						<entry>version</entry>
					</row>
				</tbody>
			</tgroup>
		</table>
	</chapter>
	<chapter xml:id="changes">
		<title>Changes</title>
		<para>Since this is the first version to be released, there are no changes.</para>
	</chapter>
	<chapter xml:id="sample_importer">
		<title xml:id="sample_importer_name">TCFImporter</title>
		<para>General information about this importer.</para>
		<sect1>
			<title>Mapping to Salt</title>
			<para>The importer maps each TCF layer to an SLayer object in Salt. Attributes refering
				to the TCF layer are stored as meta annotations on the SLayer itself without using a
				namespace. All annotations contained in the TCF layer are imported as annotations on
				SToken and/or SSpan objects where the annotation's namespace is (in most cases, cf.
				table below) the SLayer's name and the annotation's name is the tag's name without
				the xml namespace. Here's a list of all TCF layer's and their according
					SLayers:<table frame="all">
					<title>layer list</title>
					<tgroup cols="5">
						<colspec colname="c1" colnum="1" colwidth="1.12*"/>
						<colspec colname="newCol4" colnum="2" colwidth="1.37*"/>
						<colspec colname="newCol5" colnum="3" colwidth="1.04*"/>
						<colspec colname="newCol6" colnum="4" colwidth="1*"/>
						<colspec colname="newCol3" colnum="5" colwidth="1.89*"/>
						<thead>
							<row>
								<entry>TCF layer</entry>
								<entry>namespace of annotation</entry>
								<entry>node annotations</entry>
								<entry>edge annotations</entry>
								<entry>meta annotations on SLayer</entry>
							</row>
						</thead>
						<tbody>
							<row>
								<entry>POSTags</entry>
								<entry>saltSemantics</entry>
								<entry>POS</entry>
								<entry>-</entry>
								<entry>tagset</entry>
							</row>
							<row>
								<entry>lemmas</entry>
								<entry>saltSemantics</entry>
								<entry>LEMMA</entry>
								<entry>-</entry>
								<entry>-</entry>
							</row>
							<row>
								<entry>parsing</entry>
								<entry>syntax</entry>
								<entry>cat</entry>
								<entry>-</entry>
								<entry>tagset</entry>
							</row>
							<row>
								<entry>depparsing</entry>
								<entry>dependencies</entry>
								<entry>-</entry>
								<entry>func</entry>
								<entry>tagset</entry>
							</row>
							<row>
								<entry>morphology</entry>
								<entry>morphology</entry>
								<entry>*</entry>
								<entry>-</entry>
								<entry>-</entry>
							</row>
							<row>
								<entry>namedEntities</entry>
								<entry>named entities</entry>
								<entry>class</entry>
								<entry>-</entry>
								<entry>type</entry>
							</row>
							<row>
								<entry>references</entry>
								<entry>references</entry>
								<entry>type</entry>
								<entry>rel</entry>
								<entry>typetagset, reltagset</entry>
							</row>
							<row>
								<entry>synonymy</entry>
								<entry>lexical-semantics</entry>
								<entry>-</entry>
								<entry>-</entry>
								<entry>synonymy (on lemma annotation)</entry>
							</row>
							<row>
								<entry>antonymy</entry>
								<entry>lexical-semantics</entry>
								<entry>-</entry>
								<entry>-</entry>
								<entry>antonymy (on lemma annotation)</entry>
							</row>
							<row>
								<entry>hyponymy</entry>
								<entry>lexical-semantics</entry>
								<entry>-</entry>
								<entry>-</entry>
								<entry>hyponymy (on lemma annotation)</entry>
							</row>
							<row>
								<entry>hyperonymy</entry>
								<entry>lexical-semantics</entry>
								<entry>-</entry>
								<entry>-</entry>
								<entry>hyperonymy (on lemma annotation)</entry>
							</row>
							<row>
								<entry>wsd</entry>
								<entry>wordSense</entry>
								<entry>lexunits, comment</entry>
								<entry>-</entry>
								<entry>src</entry>
							</row>
							<row>
								<entry>WordSplittings</entry>
								<entry>wordSplittings</entry>
								<entry>split</entry>
								<entry>-</entry>
								<entry>type</entry>
							</row>
							<row>
								<entry>geo</entry>
								<entry>geography</entry>
								<entry>alt, lat, lon, continent, country, capital</entry>
								<entry>-</entry>
								<entry>src</entry>
							</row>
							<row>
								<entry>discourseconnectives</entry>
								<entry>discourseConnectives</entry>
								<entry>type</entry>
								<entry>-</entry>
								<entry>tagset</entry>
							</row>
							<row>
								<entry>phonetics</entry>
								<entry>phonetics</entry>
								<entry>pron</entry>
								<entry>-</entry>
								<entry>transcription</entry>
							</row>
							<row>
								<entry>textstructure</entry>
								<entry>textstructure</entry>
								<entry>type</entry>
								<entry>-</entry>
								<entry>-</entry>
							</row>
							<row>
								<entry>orthography</entry>
								<entry>orthography</entry>
								<entry>correction</entry>
								<entry>-</entry>
								<entry>-</entry>
							</row>
						</tbody>
					</tgroup>
				</table></para>
		</sect1>
		<sect1>
			<title>Properties</title>
			<para>The table <xref linkend="importer_prop_overview"/> contains an overview of all
				usable properties to customize the behaviour of this Pepper module. The following
				section contains a close description to each single property and describes the
				resulting differences in the mapping to the Salt model.</para>
			<table frame="all" xml:id="importer_prop_overview">
				<title>properties to customize importer behaviour</title>
				<tgroup align="left" cols="4" colsep="1" rowsep="1">
					<thead>
						<row>
							<entry>Name of property</entry>
							<entry>Type of property</entry>
							<entry>optional/ mandatory</entry>
							<entry>default value</entry>
						</row>
					</thead>
					<tbody>
						<row>
							<entry>
								<xref endterm="importer_prop1_title" linkend="prop_prop1"/>
							</entry>
							<entry>Boolean</entry>
							<entry>optional</entry>
							<entry>true</entry>
						</row>
					</tbody>
				</tgroup>
			</table>
			<sect2 xml:id="prop_prop1">
				<title xml:id="importer_prop1_title"> TCFImporter.shrinkTokenAnnotations</title>
				<para><code>TCFImporter.shrinkTokenAnnotations=true (or false)</code></para>
				<para>This property influences the import of annotations on single tokens. If it is
					set true, annotations on single tokens are stored as annotations directly at the
					token object, whereas a span is build over all tokens for multiple token
					annotations. If shrinkTokenAnnotations is set false, also annotations of single
					tokens are created at a span built over the token.</para>
			</sect2>
		</sect1>
	</chapter>
</book>
